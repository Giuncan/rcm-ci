# This is a basic workflow to help you get started with Actions

name: RCM_CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        os:
        # - ubuntu-latest	
        - windows-latest
        # - macos-latest
        python-version:
        - '3.7'
        turbovnc-version:
        - '3.1'
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout RCM
        uses: actions/checkout@v3
        with:
          repository: RemoteConnectionManager/RCM
          path: RCM

      - name: Check repo
        run: |
         ls

      # Runs a single command using the runners shell
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          
          # https://github.com/paramiko/paramiko/pull/1985
          pip install six
          
          # https://github.com/paramiko/paramiko/issues/1007
          pip install cryptography==2.9

          # https://stackoverflow.com/questions/32518458/importerror-no-module-named-cryptography-hazmat-bindings-openssl

          pip install -r RCM/rcm/client/requirements.txt

      - name: Test python
        run: |
          python --version
          python -c "import paramiko"
          pip list

      - name: Install externals MACOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
         touch RCM/rcm/client/external/turbovnc

      - name: Install externals WINDOWS
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
         choco install innoextract wget
         wget https://github.com/TurboVNC/turbovnc/releases/download/${{ matrix.turbovnc-version }}/TurboVNC-${{ matrix.turbovnc-version }}-x64.exe -O turbovnc.exe
         innoextract turbovnc.exe
         mv app RCM\rcm\client\external\turbovnc
         

      - name: Install externals LINUX
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
         wget https://github.com/TurboVNC/turbovnc/releases/download/${{ matrix.turbovnc-version }}/turbovnc_${{ matrix.turbovnc-version }}_amd64.deb -O turbovnc.deb
         dpkg-deb -x turbovnc.deb tmp
         mv tmp/opt/TurboVNC RCM/rcm/client/external/turbovnc
         mv tmp/usr/share RCM/rcm/client/external/turbovnc
         mv tmp/etc RCM/rcm/client/external/turbovnc

      - name: Build pyinstaller
        run: |
         pyinstaller RCM/rcm/client/rcm_client_qt.spec
         
      - name: Upload exe
        uses: actions/upload-artifact@v3
        with:
          name: RCM_client_${{ matrix.os }}
          path: |
            dist
